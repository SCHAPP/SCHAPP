package layout;

import java.awt.BorderLayout;
import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import controller.Controller;


public class Gui extends JFrame {

	/* ---------------------- The different TextField och Panel-----------------------*/
	
	private JPanel contentPane;
	private JTextField txtStudentSearchByPnr;
	private JTextField txtAddStudentPnr;
	private JTextField txtAddStudentName;
	private JTextField txtAddStudentPhoneNr;
	private JTextField txtAddStudentAddress;
	private JTextField txtAddCourseCodeStudent;
	private JTextField txtSearchCourseCode;
	private JTextField txtAddCourseCode;
	private JTextField txtAddCourseName;
	private JTextField txtAddCourseInfo;
	private JTextField txtAddStudentOnCourse;
	private JTextField txtAddCourseOnStudent;
	private JTextField txtResultStudentSearch;
	private JTextField txtResultCourseCodeSearch;
	
	private Controller con = new Controller();
	private JTable tblStudentTabel;
	private JTable tblShowStudent;
	private JTextField txtCourseCredit;
	private JTable tblShowCourse;

	/*-------------------------------Launch the application.-----------------------------*/
	
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Gui frame = new Gui();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/*---------------------------------Create the frame.---------------------------------*/
	
	public Gui() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 800, 500);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		contentPane.setLayout(new BorderLayout(0, 0));
		setContentPane(contentPane);
		
		JTabbedPane tabbedPane = new JTabbedPane(JTabbedPane.TOP);
		contentPane.add(tabbedPane, BorderLayout.CENTER);
		
	/*------------------------------Creates the different panels-----------------------*/	
		
		JPanel Student = new JPanel();
		tabbedPane.addTab("Student", null, Student, null);
		Student.setLayout(null);
		
		JPanel Course = new JPanel();
		tabbedPane.addTab("Course", null, Course, null);
		Course.setLayout(null);
		
		JPanel Results = new JPanel();
		tabbedPane.addTab("Results", null, Results, null);
		Results.setLayout(null);
	
	/*------------------------------Creates the Jlabels--------------------------------*/	
		
		JLabel lblStudentSearchPnr = new JLabel("Student pnr:");
		lblStudentSearchPnr.setBounds(58, 74, 73, 14);
		Student.add(lblStudentSearchPnr);
		
		JLabel lblStudentPnr = new JLabel("Student pnr:");
		lblStudentPnr.setBounds(426, 74, 80, 14);
		Student.add(lblStudentPnr);
		
		JLabel lblStudentName = new JLabel("Name:");
		lblStudentName.setBounds(426, 105, 57, 14);
		Student.add(lblStudentName);
		
		JLabel lblPhoneNr = new JLabel("Phone nr:");
		lblPhoneNr.setBounds(426, 167, 65, 14);
		Student.add(lblPhoneNr);
		
		JLabel lblAddress = new JLabel("Address:");
		lblAddress.setBounds(426, 136, 80, 14);
		Student.add(lblAddress);
		
		JLabel lblStudentCourseCode = new JLabel("Course code:");
		lblStudentCourseCode.setBounds(426, 198, 80, 14);
		Student.add(lblStudentCourseCode);
		
		JLabel lblCourseCode = new JLabel("Couse code:");
		lblCourseCode.setBounds(426, 74, 80, 14);
		Course.add(lblCourseCode);
		
		JLabel lblSearchByCourseCode = new JLabel("Course Code:");
		lblSearchByCourseCode.setBounds(58, 74, 85, 14);
		Course.add(lblSearchByCourseCode);
		
		JLabel lblCourseName = new JLabel("Name:");
		lblCourseName.setBounds(426, 105, 80, 14);
		Course.add(lblCourseName);
		
		JLabel lblCourseInfo = new JLabel("Course info:");
		lblCourseInfo.setBounds(426, 136, 80, 14);
		Course.add(lblCourseInfo);
		
		JLabel lblCorseStudent = new JLabel("Course code:");
		lblCorseStudent.setBounds(426, 334, 80, 14);
		Course.add(lblCorseStudent);
		
		JLabel lblResultStudentPnr = new JLabel("Student pnr:");
		lblResultStudentPnr.setBounds(46, 74, 71, 14);
		Results.add(lblResultStudentPnr);
		
		JLabel lblResultCourseCode = new JLabel("Course code:");
		lblResultCourseCode.setBounds(46, 105, 85, 14);
		Results.add(lblResultCourseCode);
		
	/*-------------------------- Creates the textfields---------------------------------*/
		
		txtStudentSearchByPnr = new JTextField();
		txtStudentSearchByPnr.setBounds(141, 71, 141, 20);
		Student.add(txtStudentSearchByPnr);
		txtStudentSearchByPnr.setColumns(10);
		
		txtAddStudentPnr = new JTextField();
		txtAddStudentPnr.setBounds(515, 71, 141, 20);
		Student.add(txtAddStudentPnr);
		txtAddStudentPnr.setColumns(10);
		
		txtAddStudentName = new JTextField();
		txtAddStudentName.setBounds(515, 102, 141, 20);
		Student.add(txtAddStudentName);
		txtAddStudentName.setColumns(10);
		
		txtAddStudentAddress = new JTextField();
		txtAddStudentAddress.setText("");
		txtAddStudentAddress.setBounds(515, 133, 141, 20);
		Student.add(txtAddStudentAddress);
		txtAddStudentAddress.setColumns(10);
		
		txtAddCourseCodeStudent = new JTextField();
		txtAddCourseCodeStudent.setBounds(515, 195, 141, 20);
		Student.add(txtAddCourseCodeStudent);
		txtAddCourseCodeStudent.setColumns(10);
		
		txtAddStudentPhoneNr = new JTextField();
		txtAddStudentPhoneNr.setBounds(515, 164, 141, 20);
		Student.add(txtAddStudentPhoneNr);
		txtAddStudentPhoneNr.setColumns(10);
		
		txtSearchCourseCode = new JTextField();
		txtSearchCourseCode.setBounds(141, 71, 141, 20);
		Course.add(txtSearchCourseCode);
		txtSearchCourseCode.setColumns(10);
		
		txtAddCourseCode = new JTextField();
		txtAddCourseCode.setBounds(515, 71, 141, 20);
		Course.add(txtAddCourseCode);
		txtAddCourseCode.setColumns(10);
		
		txtAddCourseName = new JTextField();
		txtAddCourseName.setBounds(515, 102, 141, 20);
		Course.add(txtAddCourseName);
		txtAddCourseName.setColumns(10);
		
		txtAddCourseInfo = new JTextField();
		txtAddCourseInfo.setBounds(515, 133, 141, 20);
		Course.add(txtAddCourseInfo);
		txtAddCourseInfo.setColumns(10);
		
		txtAddStudentOnCourse = new JTextField();
		txtAddStudentOnCourse.setBounds(515, 300, 141, 20);
		Course.add(txtAddStudentOnCourse);
		txtAddStudentOnCourse.setColumns(10);
		
		txtAddCourseOnStudent = new JTextField();
		txtAddCourseOnStudent.setBounds(515, 331, 141, 20);
		Course.add(txtAddCourseOnStudent);
		txtAddCourseOnStudent.setColumns(10);
		
		txtResultStudentSearch = new JTextField();
		txtResultStudentSearch.setBounds(141, 71, 141, 20);
		Results.add(txtResultStudentSearch);
		txtResultStudentSearch.setColumns(10);
		
		txtResultCourseCodeSearch = new JTextField();
		txtResultCourseCodeSearch.setBounds(141, 102, 141, 20);
		Results.add(txtResultCourseCodeSearch);
		txtResultCourseCodeSearch.setColumns(10);
		
	/*--------------------------------Creates the JBUttons-----------------------------*/	
		
		JButton btnSearchStudent = new JButton("Search");
		btnSearchStudent.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
			try {
				ResultSet rs =con.findOneStudent(txtStudentSearchByPnr.getText());
				rs.next();
				txtAddStudentPnr.setText(rs.getString("spnr"));
				txtAddStudentName.setText(rs.getString("sname"));
				txtAddStudentAddress.setText(rs.getString("sadress"));	
				txtAddStudentPhoneNr.setText(rs.getString("sphnr"));
				
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				
			}
			}
		});
		btnSearchStudent.setBounds(141, 100, 141, 20);
		Student.add(btnSearchStudent);
		
		JButton btnAddStudent = new JButton("Add new student");
		btnAddStudent.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				addStudent();
			}

			
		});
		btnAddStudent.setBounds(515, 226, 141, 20);
		Student.add(btnAddStudent);
		
		JButton btnDeleteStudent = new JButton("Delete Student");
		btnDeleteStudent.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				try {
					con.deleteStudent(txtStudentSearchByPnr.getText());
					showAll();
					ClearTxtFieldsStudent();
				} catch (SQLException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				
				
			}
		});
		btnDeleteStudent.setBounds(515, 257, 141, 20);
		Student.add(btnDeleteStudent);
		
		
		JButton btnSearchAll = new JButton("Search All");
		btnSearchAll.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				showAll();
			}
		});
		btnSearchAll.setBounds(141, 133, 141, 20);
		Student.add(btnSearchAll);
		
		tblShowStudent = new JTable();
		tblShowStudent.setBounds(31, 167, 371, 218);
		Student.add(tblShowStudent);
		
		JButton btbSearchByCourseCode = new JButton("Search");
		btbSearchByCourseCode.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				
				try {
					ResultSet rs = con.findOneCourse(txtSearchCourseCode.getText());
					rs.next();
					txtAddCourseCode.setText(rs.getString("ccode"));
					txtAddCourseName.setText(rs.getString("cname"));
					txtAddCourseInfo.setText(rs.getString("cinfo"));
					txtCourseCredit.setText(rs.getString("credit"));
					
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
 
				
			}
		});
		btbSearchByCourseCode.setBounds(141, 100, 141, 20);
		Course.add(btbSearchByCourseCode);
		
		JButton btnAddNewCourse = new JButton("Add new Course");
		btnAddNewCourse.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				addCourse();
			
			}
		});
		btnAddNewCourse.setBounds(515, 195, 141, 20);
		Course.add(btnAddNewCourse);
		
		JButton btnDeleteCourse = new JButton("Delete Course");
		btnDeleteCourse.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				try {
					con.deleteCourse(txtSearchCourseCode.getText());
					showAllCourses();
					ClearTxtFieldsCourse();
					
				} catch (SQLException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			}
		});
		btnDeleteCourse.setBounds(515, 224, 141, 20);
		Course.add(btnDeleteCourse);
		
		JButton btnAddStudentToCourse = new JButton("Add student to course");
		btnAddStudentToCourse.setBounds(502, 362, 171, 23);
		Course.add(btnAddStudentToCourse);
		
		JLabel lblCourseCredit = new JLabel("Credit:");
		lblCourseCredit.setBounds(426, 161, 46, 14);
		Course.add(lblCourseCredit);
		
		txtCourseCredit = new JTextField();
		txtCourseCredit.setBounds(515, 164, 141, 20);
		Course.add(txtCourseCredit);
		txtCourseCredit.setColumns(10);
		
		JLabel lblStudentOnCourse = new JLabel("Student pnr:");
		lblStudentOnCourse.setBounds(426, 303, 73, 14);
		Course.add(lblStudentOnCourse);
		
		tblShowCourse = new JTable();
		tblShowCourse.setBounds(31, 167, 371, 218);
		Course.add(tblShowCourse);
		
		JButton btnSearchAllCourses = new JButton("Search all");
		btnSearchAllCourses.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				showAllCourses();
			}
		});
		btnSearchAllCourses.setBounds(141, 132, 141, 23);
		Course.add(btnSearchAllCourses);
		
		JButton btnResultSearch = new JButton("Search result");
		btnResultSearch.setBounds(141, 129, 141, 23);
		Results.add(btnResultSearch);
	}

	private void showAll(){
		ResultSet rs = null;
		try {
			rs = con.findAllStudent();
		} catch (SQLException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		buildTable(rs, tblShowStudent);
	}
	
	private void showAllCourses(){
		ResultSet rs = null;
		try {
			rs = con.findAllCourse();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		buildTable(rs, tblShowCourse);
	}
			
	
	
	private void buildTable(ResultSet rs, JTable table) {
	
		try {
			
			DefaultTableModel dt = buildTableModel(rs);
			table.setModel(dt);;
			
			
		} catch (SQLException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		
		 //model

		
	}

	public static DefaultTableModel buildTableModel(ResultSet rs)
	        throws SQLException {

	    ResultSetMetaData metaData = rs.getMetaData();

	    // names of columns
	    Vector<String> columnNames = new Vector<String>();
	    int columnCount = metaData.getColumnCount();
	    
	    for (int column = 1; column <= columnCount; column++) {
	        columnNames.add(metaData.getColumnName(column));
	    }

	    // data of the table
	    Vector<Vector<Object>> data = new Vector<Vector<Object>>();
	    while (rs.next()) {
	        Vector<Object> vector = new Vector<Object>();
	        for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
	            vector.add(rs.getObject(columnIndex));
	        }
	        data.add(vector);
	    }

	    return new DefaultTableModel(data, columnNames);

	}public void addStudent() {
		if(!txtAddStudentPnr.getText().equals(""))
		{
			String spnr = txtAddStudentPnr.getText();
			String sname = txtAddStudentName.getText();
			String saddress = txtAddStudentAddress.getText();
			String sphnr = txtAddStudentPhoneNr.getText();
			
			try {
				con.insertOneStudent(spnr, sname, saddress, sphnr);
				JOptionPane.showMessageDialog(null, "Student added");
			} catch (SQLException e) {
				JOptionPane.showMessageDialog(null, "Student already exists!");
			//	e.printStackTrace();
			}
		}
		else{
			JOptionPane.showMessageDialog(null,"Insert pnr");
		}
			
		
		
	}
	public void ClearTxtFieldsStudent(){
		txtAddStudentPnr.setText("");
		txtAddStudentName.setText("");
		txtAddStudentAddress.setText("");
		txtAddStudentPhoneNr.setText("");
		
		
	}public void addCourse() {
		if(!txtAddCourseCode.getText().equals(""))
		{
			String ccode = txtAddCourseCode.getText();
			String cname = txtAddCourseName.getText();
			String cinfo = txtAddCourseInfo.getText();
			String credit = txtCourseCredit.getText();
			
			try {
				con.insertOneCourse(ccode, cname, cinfo, credit);
				JOptionPane.showMessageDialog(null, "Course added");
			} catch (SQLException e) {
				JOptionPane.showMessageDialog(null, "Course already exists!");
			//	e.printStackTrace();
			}
		}
		else{
			JOptionPane.showMessageDialog(null,"Insert Course code");
		}
	}
	public void ClearTxtFieldsCourse(){
		txtAddCourseCode.setText("");
		txtAddCourseName.setText("");
		txtAddCourseInfo.setText("");
		txtCourseCredit.setText("");
	}
}
